{"version":3,"sources":["webpack:///webpack/bootstrap 1fbacf91dfc71036787d","webpack:///./js/grid.js","webpack:///./js/main.js","webpack:///./js/setup.js","webpack:///./js/flood_logic.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DsB;;AAEtB;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACzDmB;AACc;;;AAGjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACZ2B;AACP;AACrB,WAAW,8BAA8B;;AAEzC;;AAEA;AACQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,8BAA8B;AAC5C,WAAW,YAAY;AACvB;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;AClKuB;AACI;AACF;;AAEzB;AACA,e;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAe;AACpC,yBAAyB,sDAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uFAAwC;AACxC;AACA,mCAAmC;AACnC,6DAA6D;AAC7D;AACA;;AAEA;AACA,qBAAqB,sDAAe;AACpC,yBAAyB,sDAAe;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA,C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1fbacf91dfc71036787d","import { handleFlood } from './flood_logic';\n\nexport const table = new Array(14);\nexport let tiles;\n\nexport function createGrid (rowCount, colCount, numColors) {\n    tiles = new Array(rowCount);\n    const gameContainer = document.getElementById('game_container');\n    const displayGrid = document.createElement('section');\n    displayGrid.id = 'flood_grid';\n    gameContainer.appendChild(displayGrid);\n\n    for (let row = 0; row < rowCount; row++) {\n        table[row] = new Array(colCount);\n        const newRow = document.createElement('ul');\n        newRow.className = 'row';\n        tiles[row] = newRow;\n        for (let col = 0; col < colCount; col++){\n            const tileColor = colorClass(numColors);\n            table[row][col] = { color: tileColor, flooded: false };\n            tiles[row][col] = buildTile(tileColor, row, col, newRow);\n        }\n        displayGrid.appendChild(newRow);\n    }\n    table[0][0].flooded = true;\n    tiles[0][0].flooded = true;\n    handleFlood(null, tiles[0][0].className);\n    \n    return table;\n}\n\nfunction buildTile(tileColor, row, col, parentEl) {\n    let tile = document.createElement('li');\n    tile.row = row;\n    tile.col = col;\n    tile.id = 'tile';\n    tile.flooded = false;\n    tile.className = tileColor;\n    const originTile = tiles[0][0] || tile;\n    tile.onclick = () => handleFlood(originTile.className, tile.className);\n    parentEl.appendChild(tile);\n    return tile;\n}\n\nconst tileColorClasses = [\n    \"purple\",\n    \"red\",\n    \"blue\",\n    \"green\",\n    \"orange\",\n    \"yellow\",\n    \"grey\",\n    \"teal\"\n];\n\nconst colorClass = function (numColors) {\n    return tileColorClasses[Math.floor(Math.random() * Math.floor(numColors))];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/grid.js\n// module id = 0\n// module chunks = 0","import { setupDOM } from './setup';\nimport { createGrid, createInfo } from './grid';\n\n\nexport let numRows = 14;\nexport let numCols = 14;\nexport let numColors = 4;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    setupDOM();\n    createGrid(numRows, numCols, numColors);\n    // createInfo();\n});\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 1\n// module chunks = 0","import { moves, resetMoves } from './flood_logic';\nimport { createGrid } from './grid';\n// import { numRows, numCols, numColors } from './main';\n\n// DOM Setup\n\nlet maxMoves = 16;\nexport { maxMoves };\n\nexport function setupDOM() {\n    const gameContainer = document.getElementById('game_container');\n    const leftContainer = document.getElementById('left_container');\n    const displayGrid = document.createElement('section');\n    displayGrid.id = 'flood_grid';\n    const infoAside = document.createElement('aside');\n    infoAside.id = 'info';\n    const gameState = document.createElement('article');\n    gameState.id = 'game_state';\n    const gridForm = document.createElement('form');\n    gridForm.id = 'form';\n    const completionContainer = document.createElement('article');\n    completionContainer.id = 'completion';\n    const instructions = document.createElement('article');\n    instructions.id = 'instructions';\n\n    leftContainer.appendChild(infoAside);\n    infoAside.appendChild(gameState);\n    infoAside.appendChild(gridForm);\n    infoAside.appendChild(completionContainer);\n    infoAside.appendChild(instructions);\n\n    createInfo(gameState);\n    createGameParams(gridForm);\n    addInstructions(instructions);\n    addLinks();\n    return gameContainer;\n}\n\nfunction addInstructions(instructionsContainer) {\n    const instructions1 = document.createElement('p');\n    const instructions2 = document.createElement('p');\n    instructions1.innerHTML = \"Start from the top left corner and work your way across the grid by clicking your neighbor's color and flooding the map.\";\n    instructions2.innerHTML = \"Try to win in as few as turns as possible!\";\n    instructionsContainer.appendChild(instructions1);\n    instructionsContainer.appendChild(instructions2);\n}\n\nfunction createInfo(stateContainer) {\n    const movesEl = document.createElement('h3');\n    const instructionsEl = document.createElement('h4');\n    movesEl.id = 'moves_counter';\n    movesEl.className = 'top_space';\n    movesEl.innerHTML = moves + '/' + maxMoves;\n    instructionsEl.innerHTML = \"Click tiles and flood the map with a single color!\";\n    // instructionsEl.className = 'top_space';\n    stateContainer.appendChild(instructionsEl);\n    stateContainer.appendChild(movesEl);\n}\n\nfunction createGameParams(gridForm) {\n    const gridSizes = [[\"6 x 6\", 6],\n    [\"10 x 10\", 10],\n    [\"14 x 14\", 14, true],\n    [\"20 x 20\", 20],\n    [\"25 x 25\", 25],\n    [\"30 x 30\", 30]\n    ];\n    const colors = [[\"3\", 3],\n    [\"4\", 4, true],\n    [\"5\", 5],\n    [\"6\", 6],\n    [\"7\", 7],\n    [\"8\", 8]\n    ];\n\n    const gridDropdown = createDropdown(gridSizes);\n    gridDropdown.id = 'grid_size';\n    const colorDropdown = createDropdown(colors);\n    colorDropdown.id = 'color_count';\n    const newGameButton = document.createElement('input');\n    newGameButton.type = \"submit\";\n    newGameButton.value = 'New Game';\n    newGameButton.onclick = createNewGame;\n\n    let label = document.createElement('label');\n    label.innerHTML= 'Colors: ';\n    label.appendChild(colorDropdown);\n    // gridForm.appendChild(gridDropdown);\n    gridForm.appendChild(label);\n    gridForm.appendChild(newGameButton);\n}\n\nfunction createDropdown(optionArr) {\n    const dropDown = document.createElement('select');\n    for (let i = 0; i < optionArr.length; i++) {\n        const option = document.createElement('option');\n        option.innerHTML = optionArr[i][0];\n        option.value = optionArr[i][1];\n        option.type = 'select';\n        if (optionArr[i][2]) option.selected = true;\n        dropDown.appendChild(option);\n    }\n    return dropDown;\n}\n\nfunction createNewGame(e) {\n    if (e) e.preventDefault();\n    // const { numRows, numCols, numColors } = setGridSpecs();\n    const { numColors } = setGridSpecs();\n    const gameContainer = document.getElementById('game_container');\n    const floodGrid = document.getElementById('flood_grid');\n\n    gameContainer.removeChild(floodGrid);\n    resetMoves();\n    createGrid(14, 14, numColors);\n}\n\n\n\nfunction setGridSpecs() {\n    const colorDropdown = document.getElementById('color_count');\n    // const gridDropdown = document.getElementById('grid_size');\n    // numRows = Number(gridDropdown.value);\n    // numCols = Number(gridDropdown.value);\n    // numColors = Number(colorDropdown.value);\n\n    // const newRows = Number(gridDropdown.value);\n    // const newCols = Number(gridDropdown.value);\n    const newColors = Number(colorDropdown.value);\n\n    let defaultConditions = (14 + 14) * 4;\n    // let gameConditions = (newRows + newCols) * newColors;\n    let gameConditions = 28 * newColors;\n    maxMoves = Math.floor(16 * (gameConditions / defaultConditions));\n    // return { numRows: newRows, numCols: newCols, numColors: newColors };\n    return { numColors: newColors };\n}\n\nfunction addLinks() {\n    const page = document.getElementById(\"page_container\");\n\n    const linksContainer = document.createElement('section');\n    const linksContent = document.createElement('article');\n    linksContainer.id = 'links_container';\n    linksContent.className = 'links';\n\n    const linkedIn = createLink(\"fab fa-linkedin\", \"https://www.linkedin.com/in/travis-tillotson\");\n    const gitHub = createLink(\"fab fa-github\", \"https://github.com/ttillotson/ColorFlood\");\n\n    page.appendChild(linksContainer);\n    linksContainer.appendChild(linksContent);\n    linksContent.appendChild(linkedIn);\n    linksContent.appendChild(gitHub);\n}\n\nfunction createLink(className, url) {\n    const link = document.createElement('a');\n    link.href = url;\n    const icon = document.createElement('i');\n    icon.className = className;\n    link.appendChild(icon);\n    return link;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/setup.js\n// module id = 2\n// module chunks = 0","import { table, tiles } from './grid';\nimport { numRows, numCols } from './main';\nimport { maxMoves, test } from './setup.js';\n\n// Call flood when creating grid to attach initial matches\nexport let moves = -1; \nlet finished = false;\n\nexport function handleFlood(oldColor, newColor) {\n    if (finished || moves >= maxMoves) return;\n    // Do nothing if clicked tile is original\n    if (oldColor === newColor) return;\n    moves++;\n    for (let row = 0; row < numRows; row++) {\n        for (let col = 0; col < numCols; col++) {\n            if (tiles[row][col].flooded) {\n                floodTile(row, col, newColor);\n                floodNeighbors(row, col, newColor);\n            }\n        }\n    }\n    gameOver();\n    updateInfo();\n}\n\nfunction floodTile(row, col, color) {\n    tiles[row][col].className = '';\n    tiles[row][col].className = color;\n    tiles[row][col].flooded = true;\n}\n\nfunction floodNeighbors(row, col, color) {\n    if (row < numRows - 1) canBeFlooded(row + 1, col, color);\n    if (row > 0) canBeFlooded(row - 1, col, color);\n    if (col < numCols - 1) canBeFlooded(row, col + 1, color);\n    if (col > 0) canBeFlooded(row, col - 1, color);\n}\n\nfunction canBeFlooded(row, col, color) {\n    if (tiles[row][col].flooded) return; // Skip if it is already flooded\n    if (tiles[row][col].className === color){\n        floodTile(row, col, color);    // Toggle Flood\n        // setTimeout(floodNeighbors(row, col, color), 2000);   // Check the neighbors\n    }\n}\n\nfunction floodedBoard(){\n    for (let row = 0; row < numRows; row++){\n        for (let col = 0; col < numCols; col++){\n            if (!tiles[row][col].flooded) return;\n        }\n    }\n    finished = true;\n    return true;\n}\n\nfunction gameOver() {\n    floodedBoard();\n    if (floodedBoard()){\n        victory();\n\n    } else if (moves >= maxMoves) {\n        defeat();\n    }\n} \n\nfunction victory() {\n    const completionContainer = document.getElementById('completion');\n    const won = document.createElement('h4');\n    won.className = 'title_green';\n    won.innerHTML = \"You Won!\";\n    completionContainer.appendChild(won);\n}\n\nfunction defeat() {\n    const completionContainer = document.getElementById('completion');\n    const loss = document.createElement('h4');\n    loss.className = 'title_red';\n    loss.innerHTML = \"You Lost!\";\n    completionContainer.appendChild(loss);\n}\n\nfunction updateInfo() {\n    const infoEl = document.getElementById('info');\n    const movesEl = document.getElementById('moves_counter');\n    movesEl.innerHTML = moves + '/' + maxMoves;\n}\n\nexport function resetMoves() {\n    moves = -1;\n    finished = false;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/flood_logic.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}