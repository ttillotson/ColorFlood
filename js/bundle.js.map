{"version":3,"sources":["webpack:///webpack/bootstrap 06fdf0d7789ab29d1945","webpack:///./js/main.js","webpack:///./js/grid.js","webpack:///./js/flood_logic.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DqB;;AAErB;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;ACPqB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;AC/CA;;AAEA,C","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 06fdf0d7789ab29d1945","import { createGrid } from './grid';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const numRows = 14;\n    const numCols = 14;\n\n    createGrid(numRows, numCols);\n});\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 0\n// module chunks = 0","import { handleFlood } from './flood_logic';\n\n// Function to build grid - 14 <ul> by 14 <li>\n// - Assigns random tile color\n// \n// \nconst table = new Array(14);\nconst tiles = new Array(14);\n\nexport function createGrid (rowCount, colCount) {\n    for (let row = 0; row < rowCount; row++) {\n        const displayTable = document.getElementById('flood_grid');\n        table[row] = new Array(colCount);\n        const newRow = document.createElement('ul');\n        tiles[row] = newRow;\n        for (let col = 0; col < colCount; col++){\n            const tileColor = colorClass();\n            table[row][col] = { color: tileColor, flooded: false };\n            tiles[row][col] = buildTile(tileColor, row, col, newRow);\n        }\n        displayTable.appendChild(newRow);\n    }\n    \n    return table;\n}\n\nfunction buildTile(tileColor, row, col, parentEl) {\n    let tile = document.createElement('li');\n    tile.dataset.row = row;\n    tile.dataset.col = col;\n    tile.className = `tile ${tileColor}`;\n    tile.onclick = handleFlood;\n    parentEl.appendChild(tile);\n    return tile;\n}\n\nconst tileColorClasses = [\n    \"purple\",\n    \"blue\",\n    \"green\",\n    \"red\",\n    \"yellow\",\n    \"orange\"\n];\n\nconst colorClass = function () {\n    return tileColorClasses[Math.floor(Math.random() * Math.floor(6))];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/grid.js\n// module id = 1\n// module chunks = 0","export function handleFlood() {\n    \n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/flood_logic.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}